{"ast":null,"code":"var _jsxFileName = \"/home/vickey/Desktop/HackerNews-master/src/pages/Home/Home.js\";\nimport React from 'react';\nimport { topStoriesUrl } from '../../api/endpoints';\nimport { storiesPerLoad } from '../../constants';\nimport withLoading from '../../hoc/withLoading';\nimport { handleError } from '../../api/helpers';\nimport List from '../../components/List';\nconst EnchancedList = withLoading(List);\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.getTopStories = () => {\n      fetch(topStoriesUrl).then(handleError).then(response => response.json()).then(data => {\n        this.storiesList = [...data];\n        this.loadStories();\n        this.setState({\n          isLoading: false\n        });\n      }).catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n    };\n\n    this.loadStories = () => {\n      const endIndex = this.state.activeStories.length + storiesPerLoad;\n      this.setState({\n        activeStories: [...this.storiesList.slice(0, endIndex)]\n      });\n\n      if (this.storiesList.length === this.state.activeStories.length) {\n        this.setState({\n          allLoaded: true\n        });\n      }\n    };\n\n    this.state = {\n      activeStories: [],\n      allLoaded: false,\n      isLoading: true,\n      error: false\n    };\n    this.storiesList = [];\n  }\n\n  componentDidMount() {\n    this.getTopStories();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(EnchancedList, {\n      type: \"story\",\n      isLoading: this.state.isLoading,\n      error: this.state.error,\n      list: this.state.activeStories,\n      loadStories: this.loadStories,\n      allLoaded: this.state.allLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/vickey/Desktop/HackerNews-master/src/pages/Home/Home.js"],"names":["React","topStoriesUrl","storiesPerLoad","withLoading","handleError","List","EnchancedList","Home","Component","constructor","getTopStories","fetch","then","response","json","data","storiesList","loadStories","setState","isLoading","catch","error","endIndex","state","activeStories","length","slice","allLoaded","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,MAAMC,aAAa,GAAGH,WAAW,CAACE,IAAD,CAAjC;;AACA,MAAME,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,aAjBc,GAiBE,MAAM;AACpBC,MAAAA,KAAK,CAACV,aAAD,CAAL,CACGW,IADH,CACQR,WADR,EAEGQ,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZ,aAAKC,WAAL,GAAmB,CAAC,GAAGD,IAAJ,CAAnB;AACA,aAAKE,WAAL;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE;AADC,SAAd;AAGD,OATH,EAUGC,KAVH,CAUSC,KAAK,IAAI;AACd,aAAKH,QAAL,CAAc;AACZG,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAdH;AAeD,KAjCa;;AAAA,SAmCdJ,WAnCc,GAmCA,MAAM;AAClB,YAAMK,QAAQ,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,MAAzB,GAAkCvB,cAAnD;AAEA,WAAKgB,QAAL,CAAc;AACZM,QAAAA,aAAa,EAAE,CAAC,GAAG,KAAKR,WAAL,CAAiBU,KAAjB,CAAuB,CAAvB,EAA0BJ,QAA1B,CAAJ;AADH,OAAd;;AAIA,UAAI,KAAKN,WAAL,CAAiBS,MAAjB,KAA4B,KAAKF,KAAL,CAAWC,aAAX,CAAyBC,MAAzD,EAAiE;AAC/D,aAAKP,QAAL,CAAc;AACZS,UAAAA,SAAS,EAAE;AADC,SAAd;AAGD;AACF,KA/Ca;;AAGZ,SAAKJ,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXG,MAAAA,SAAS,EAAE,KAFA;AAGXR,MAAAA,SAAS,EAAE,IAHA;AAIXE,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOA,SAAKL,WAAL,GAAmB,EAAnB;AACD;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,aAAL;AACD;;AAkCDmB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWJ,SAFxB;AAGE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWF,KAHpB;AAIE,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,aAJnB;AAKE,MAAA,WAAW,EAAE,KAAKP,WALpB;AAME,MAAA,SAAS,EAAE,KAAKM,KAAL,CAAWI,SANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AA9DgC;;AAiEnC,eAAepB,IAAf","sourcesContent":["import React from 'react';\n\nimport { topStoriesUrl } from '../../api/endpoints';\nimport { storiesPerLoad } from '../../constants';\nimport withLoading from '../../hoc/withLoading';\nimport { handleError } from '../../api/helpers';\nimport List from '../../components/List';\n\nconst EnchancedList = withLoading(List);\nclass Home extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      activeStories: [],\n      allLoaded: false,\n      isLoading: true,\n      error: false\n    }\n\n    this.storiesList = [];\n  }\n\n  componentDidMount() {\n    this.getTopStories();\n  }\n\n  getTopStories = () => {\n    fetch(topStoriesUrl)\n      .then(handleError)\n      .then(response => response.json())\n      .then(data => {\n        this.storiesList = [...data];\n        this.loadStories();\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  }\n\n  loadStories = () => {\n    const endIndex = this.state.activeStories.length + storiesPerLoad;\n\n    this.setState({\n      activeStories: [...this.storiesList.slice(0, endIndex)]\n    });\n\n    if (this.storiesList.length === this.state.activeStories.length) {\n      this.setState({\n        allLoaded: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <EnchancedList\n        type=\"story\"\n        isLoading={this.state.isLoading}\n        error={this.state.error}\n        list={this.state.activeStories}\n        loadStories={this.loadStories}\n        allLoaded={this.state.allLoaded}\n      />\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}