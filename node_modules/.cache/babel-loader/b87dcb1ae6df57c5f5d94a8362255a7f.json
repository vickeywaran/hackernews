{"ast":null,"code":"var _jsxFileName = \"/home/vickey/Desktop/mine/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Search } from './Component/search';\nimport { Table } from './Component/table';\nimport * as Default from './default';\nimport Home from './pages/Home/Home';\nimport Detail from './pages/Detail/Detail';\nimport withContainer from './hoc/withContainer';\nimport PropTypes from 'prop-types';\nimport { Button } from './Component/button';\nconst EnhancedHome = withContainer(Home);\nconst EnhancedDetail = withContainer(Detail);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: Default.DEFAULT_QUERY,\n      page: Default.DEFAULT_PAGE\n    };\n    this.needToSearchTopStories = this.needToSearchTopStories.bind(this); //this.setSearchTopstories = this.setSearchTopstories.bind(this);\n\n    this.fetchSearchTopstories = this.fetchSearchTopstories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  } // setSearchTopstories (result) {\n  //   const {hits, page} = result;\n  //   const {results, searchKey} = this.state;\n  //   const oldHits = (results && results[searchKey]) ? results[searchKey].hits : [];\n  //   const updatedHits = [\n  //     ...oldHits,\n  //     ...hits\n  //   ];\n  //  this.setState({results: {\n  //    ...results,\n  //    [searchKey]: {hits: updatedHits, page}\n  //  }});\n  // }\n\n\n  fetchSearchTopstories(searchTerm, page) {\n    fetch(`${Default.PATH_BASE}${Default.PATH_SEARCH}?${Default.PARAM_SEARCH}${searchTerm}&${Default.PARAM_PAGE}${page}`).then(response => response.json()).then(result => this.setSearchTopstories(result)).catch(e => e);\n    this.setState({\n      page\n    });\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopstories(searchTerm, Default.DEFAULT_PAGE);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit(event) {\n    const {\n      searchTerm\n    } = this.state;\n\n    if (!this.needToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopstories(this.state.searchTerm, Default.DEFAULT_PAGE);\n    }\n\n    this.setState({\n      searchKey: searchTerm\n    });\n    event.preventDefault();\n  }\n\n  needToSearchTopStories(searchTerm) {\n    return this.state.results.hasOwnProperty(searchTerm);\n  }\n\n  render() {\n    const {\n      searchTerm,\n      searchKey,\n      results\n    } = this.state;\n    const page = results && results[searchKey] && results[searchKey].page || 0;\n    const list = results && results[searchKey] && results[searchKey].hits || [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Table, {\n      list: list,\n      onDismiss: this.onDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, page > 0 ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.fetchSearchTopstories(searchKey, page - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }) : null, /*#__PURE__*/React.createElement(Router, {\n      basename: process.env.PUBLIC_URL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: EnhancedHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/:storyId\",\n      component: EnhancedDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nTable.propTypes = {\n  onDismiss: PropTypes.func,\n  list: PropTypes.array\n};\nSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node\n};\nButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default App;","map":{"version":3,"sources":["/home/vickey/Desktop/mine/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Search","Table","Default","Home","Detail","withContainer","PropTypes","Button","EnhancedHome","EnhancedDetail","App","constructor","props","state","results","searchKey","searchTerm","DEFAULT_QUERY","page","DEFAULT_PAGE","needToSearchTopStories","bind","fetchSearchTopstories","onSearchChange","onSearchSubmit","fetch","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","then","response","json","result","setSearchTopstories","catch","e","setState","componentDidMount","event","target","value","preventDefault","hasOwnProperty","render","list","hits","onDismiss","process","env","PUBLIC_URL","propTypes","func","array","string","onChange","onSubmit","children","node","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAGA,MAAMC,YAAY,GAAGH,aAAa,CAACF,IAAD,CAAlC;AACA,MAAMM,cAAc,GAAGJ,aAAa,CAACD,MAAD,CAApC;;AACA,MAAMM,GAAN,SAAkBd,SAAlB,CAA2B;AAEzBe,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAEd,OAAO,CAACe,aAHT;AAIXC,MAAAA,IAAI,EAAEhB,OAAO,CAACiB;AAJH,KAAb;AAOA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B,CAVkB,CAWlB;;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AAED,GAlBwB,CAqB1B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEC;AACA;AACA;AACA;AACD;;;AAECC,EAAAA,qBAAqB,CAAEN,UAAF,EAAcE,IAAd,EAAoB;AAEvCO,IAAAA,KAAK,CAAE,GAAEvB,OAAO,CAACwB,SAAU,GAAExB,OAAO,CAACyB,WAAY,IAAGzB,OAAO,CAAC0B,YAAa,GAAEZ,UAAW,IAAGd,OAAO,CAAC2B,UAAW,GAAEX,IAAK,EAA9G,CAAL,CACCY,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAI,KAAKC,mBAAL,CAAyBD,MAAzB,CAFhB,EAGCE,KAHD,CAGOC,CAAC,IAAIA,CAHZ;AAIA,SAAKC,QAAL,CAAc;AAACnB,MAAAA;AAAD,KAAd;AAED;;AAEDoB,EAAAA,iBAAiB,GAAI;AACnB,UAAMtB,UAAU,GAAG,KAAKH,KAAL,CAAWG,UAA9B;AACA,SAAKqB,QAAL,CAAc;AAACtB,MAAAA,SAAS,EAAEC;AAAZ,KAAd;AACA,SAAKM,qBAAL,CAA2BN,UAA3B,EAAuCd,OAAO,CAACiB,YAA/C;AACD;;AAEDI,EAAAA,cAAc,CAAEgB,KAAF,EAAS;AACrB,SAAKF,QAAL,CAAc;AAAErB,MAAAA,UAAU,EAAEuB,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACD;;AAIDjB,EAAAA,cAAc,CAAEe,KAAF,EAAS;AACrB,UAAM;AAACvB,MAAAA;AAAD,QAAe,KAAKH,KAA1B;;AAEA,QAAI,CAAC,KAAKO,sBAAL,CAA4BJ,UAA5B,CAAL,EAA8C;AAC5C,WAAKM,qBAAL,CAA2B,KAAKT,KAAL,CAAWG,UAAtC,EAAkDd,OAAO,CAACiB,YAA1D;AACD;;AAED,SAAKkB,QAAL,CAAc;AAACtB,MAAAA,SAAS,EAAEC;AAAZ,KAAd;AACAuB,IAAAA,KAAK,CAACG,cAAN;AACD;;AAGDtB,EAAAA,sBAAsB,CAAEJ,UAAF,EAAc;AAClC,WAAO,KAAKH,KAAL,CAAWC,OAAX,CAAmB6B,cAAnB,CAAkC3B,UAAlC,CAAP;AACD;;AAED4B,EAAAA,MAAM,GAAI;AACR,UAAM;AAAE5B,MAAAA,UAAF;AAAcD,MAAAA,SAAd;AAAyBD,MAAAA;AAAzB,QAAqC,KAAKD,KAAhD;AACA,UAAMK,IAAI,GAAIJ,OAAO,IAAIA,OAAO,CAACC,SAAD,CAAlB,IAAiCD,OAAO,CAACC,SAAD,CAAP,CAAmBG,IAArD,IAA8D,CAA3E;AACA,UAAM2B,IAAI,GAAI/B,OAAO,IAAIA,OAAO,CAACC,SAAD,CAAlB,IAAiCD,OAAO,CAACC,SAAD,CAAP,CAAmB+B,IAArD,IAA8D,EAA3E;AAEA,wBAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE9B,UADT;AAEE,MAAA,QAAQ,EAAE,KAAKO,cAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKC,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEqB,IADR;AAEE,MAAA,SAAS,EAAE,KAAKE,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI7B,IAAI,GAAG,CAAR,gBACP,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKI,qBAAL,CAA2BP,SAA3B,EAAsCG,IAAI,GAAG,CAA7C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,GAKL,IANE,eAOJ,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE8B,OAAO,CAACC,GAAR,CAAYC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE1C,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,eAEM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CAPI,CAfF,CAHF;AAqCD;;AArHwB;;AAwH3BR,KAAK,CAACkD,SAAN,GAAkB;AAChBJ,EAAAA,SAAS,EAAEzC,SAAS,CAAC8C,IADL;AAEhBP,EAAAA,IAAI,EAAEvC,SAAS,CAAC+C;AAFA,CAAlB;AAKArD,MAAM,CAACmD,SAAP,GAAmB;AACjBV,EAAAA,KAAK,EAAEnC,SAAS,CAACgD,MADA;AAEjBC,EAAAA,QAAQ,EAAEjD,SAAS,CAAC8C,IAFH;AAGjBI,EAAAA,QAAQ,EAAElD,SAAS,CAAC8C,IAHH;AAIjBK,EAAAA,QAAQ,EAAEnD,SAAS,CAACoD;AAJH,CAAnB;AAOAnD,MAAM,CAAC4C,SAAP,GAAmB;AACjBQ,EAAAA,OAAO,EAAErD,SAAS,CAAC8C;AADF,CAAnB;AAQA,eAAe1C,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Search } from './Component/search';\nimport { Table } from './Component/table';\nimport * as Default from './default';\n\nimport Home from './pages/Home/Home';\nimport Detail from './pages/Detail/Detail';\nimport withContainer from './hoc/withContainer';\nimport PropTypes from 'prop-types';\nimport { Button } from './Component/button';\n\n\nconst EnhancedHome = withContainer(Home);\nconst EnhancedDetail = withContainer(Detail);\nclass App extends Component{\n  \n  constructor (props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: Default.DEFAULT_QUERY,\n      page: Default.DEFAULT_PAGE\n    };\n\n    this.needToSearchTopStories = this.needToSearchTopStories.bind(this);\n    //this.setSearchTopstories = this.setSearchTopstories.bind(this);\n    this.fetchSearchTopstories = this.fetchSearchTopstories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n   \n  }\n\n\n // setSearchTopstories (result) {\n //   const {hits, page} = result;\n //   const {results, searchKey} = this.state;\n\n //   const oldHits = (results && results[searchKey]) ? results[searchKey].hits : [];\n //   const updatedHits = [\n //     ...oldHits,\n //     ...hits\n //   ];\n\n  //  this.setState({results: {\n  //    ...results,\n  //    [searchKey]: {hits: updatedHits, page}\n  //  }});\n // }\n\n  fetchSearchTopstories (searchTerm, page) {\n    \n    fetch(`${Default.PATH_BASE}${Default.PATH_SEARCH}?${Default.PARAM_SEARCH}${searchTerm}&${Default.PARAM_PAGE}${page}`)\n    .then(response => response.json())\n    .then(result => this.setSearchTopstories(result))\n    .catch(e => e);\n    this.setState({page});\n    \n  }\n\n  componentDidMount () {\n    const searchTerm = this.state.searchTerm;\n    this.setState({searchKey: searchTerm});\n    this.fetchSearchTopstories(searchTerm, Default.DEFAULT_PAGE);\n  }\n\n  onSearchChange (event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  \n\n  onSearchSubmit (event) {\n    const {searchTerm} = this.state;\n\n    if (!this.needToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopstories(this.state.searchTerm, Default.DEFAULT_PAGE);\n    }\n\n    this.setState({searchKey: searchTerm});\n    event.preventDefault();\n  }\n  \n\n  needToSearchTopStories (searchTerm) {\n    return this.state.results.hasOwnProperty(searchTerm);\n  }\n\n  render () {\n    const { searchTerm, searchKey, results } = this.state;\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return(\n      \n        \n      <div className='page'>\n        <div className='interactions'>\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n            >\n            <strong></strong>\n          </Search>\n        </div>\n        \n        <Table\n          list={list}\n          onDismiss={this.onDismiss}\n          />\n        <div className='interactions'>\n          {(page > 0)\n  ? <Button onClick={() => this.fetchSearchTopstories(searchKey, page - 1)}>\n  </Button>\n\n  \n    : null }\n    <Router basename={process.env.PUBLIC_URL}>\n          <Route exact path=\"/\" component={EnhancedHome} />\n          <Route exact path=\"/:storyId\" component={EnhancedDetail} />\n        </Router>\n        </div>\n            \n      </div>\n\n\n      \n  \n    );\n  }\n}\n\nTable.propTypes = {\n  onDismiss: PropTypes.func,\n  list: PropTypes.array\n};\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func\n};\n\n\n\n\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}